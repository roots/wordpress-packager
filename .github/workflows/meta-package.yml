name: Meta-package

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  package:
    name: Package
    runs-on: ubuntu-latest
    outputs:
      package-name: ${{ steps.package.outputs.package-name }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ vars.META_PACKAGE }}

      - name: Get upstream package name
        id: package
        run: echo "package-name=$(jq -r '.require | map_values(select(. == "self.version")) | keys[0]' composer.json)" >> $GITHUB_OUTPUT

  sync:
    name: Sync
    runs-on: ubuntu-latest
    needs:
      - package
    outputs:
      tags-matrix: ${{ steps.tags-matrix.outputs.result }}
    steps:
      - uses: actions/checkout@v3
      - name: Generate matrix from versions arrays
        id: tags-matrix
        uses: actions/github-script@v6
        env:
          PACKAGE: ${{ needs.package.outputs.package-name }}
          META: ${{ vars.META_PACKAGE }}
        with:
          script: |
            const tags = require('${{ github.workspace }}/.github/scripts/tags.js')
            return await tags({ github, context })

  tags:
    name: Tags
    runs-on: ubuntu-latest
    needs:
      - sync
    if: needs.sync.outputs.tags-matrix != '[]'
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        tag: ${{ fromJSON(needs.sync.outputs.tags-matrix) }}
    steps:
      - name: Generate token
        uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_PRIVATE_KEY }}

      - uses: actions/checkout@v3
        with:
          repository: ${{ vars.META_PACKAGE }}
          token: ${{ steps.generate-token.outputs.token }}

      - name: Push tag
        env:
          TAG: ${{ matrix.tag }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "${TAG}" -m "${TAG}"
          git push origin "${TAG}"

  releases:
    name: Releases
    runs-on: ubuntu-latest
    needs:
      - sync
      - tags
    steps:
      - name: Generate token
        uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_PRIVATE_KEY }}

      - uses: actions/checkout@v3

      - name: Retrieve version notes
        uses: actions/github-script@v6
        env:
          TAGS_MATRIX: ${{ needs.sync.outputs.tags-matrix }}
          META_PACKAGE: ${{ vars.META_PACKAGE }}
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            const notes = require('${{ github.workspace }}/.github/scripts/notes.js')
            await notes({ github, core, fetch })
